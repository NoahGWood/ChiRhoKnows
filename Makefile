# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  ImGui_config = debug
  TokenizersCPP_config = debug
  ChiRhoKnows_config = debug

else ifeq ($(config),release)
  ImGui_config = release
  TokenizersCPP_config = release
  ChiRhoKnows_config = release

else ifeq ($(config),dist)
  ImGui_config = dist
  TokenizersCPP_config = dist
  ChiRhoKnows_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := ImGui TokenizersCPP ChiRhoKnows

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: ImGui TokenizersCPP

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C Vendor -f ImGui.make config=$(ImGui_config)
endif

TokenizersCPP:
ifneq (,$(TokenizersCPP_config))
	@echo "==== Building TokenizersCPP ($(TokenizersCPP_config)) ===="
	@${MAKE} --no-print-directory -C Vendor -f TokenizersCPP.make config=$(TokenizersCPP_config)
endif

ChiRhoKnows: ImGui TokenizersCPP
ifneq (,$(ChiRhoKnows_config))
	@echo "==== Building ChiRhoKnows ($(ChiRhoKnows_config)) ===="
	@${MAKE} --no-print-directory -C ChiRhoKnows/ChiRhoKnows -f Makefile config=$(ChiRhoKnows_config)
endif

clean:
	@${MAKE} --no-print-directory -C Vendor -f ImGui.make clean
	@${MAKE} --no-print-directory -C Vendor -f TokenizersCPP.make clean
	@${MAKE} --no-print-directory -C ChiRhoKnows/ChiRhoKnows -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   ImGui"
	@echo "   TokenizersCPP"
	@echo "   ChiRhoKnows"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"